// console.log(arr[0]);  // –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (1)
// console.log(arr[arr.length - 1]);  // –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç (5)

// arr.push(6);        // –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω–µ—Ü [1, 2, 3, 4, 5, 6]
// arr.unshift(0);     // –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ [0, 1, 2, 3, 4, 5, 6]

// arr.pop();         // –£–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç ‚Üí [1, 2, 3, 4, 5]
// arr.shift();       // –£–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç ‚Üí [2, 3, 4, 5]

// arr.splice(2, 1);      // –£–¥–∞–ª—è–µ—Ç 1 —ç–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–∞ 2 ‚Üí [1, 2, 4, 5]
// arr.splice(2, 0, 99);  // –í—Å—Ç–∞–≤–ª—è–µ—Ç 99 –Ω–∞ –∏–Ω–¥–µ–∫—Å 2 ‚Üí [1, 2, 99, 4, 5]
// arr.splice(1, 2, 7, 8); // –£–¥–∞–ª—è–µ—Ç 2 —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –∏–Ω–¥–µ–∫—Å–∞ 1 –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç 7, 8 ‚Üí [1, 7, 8, 4, 5]

// let newArr = arr.slice(1, 3);  // –ö–æ–ø–∏—Ä—É–µ—Ç —Å –∏–Ω–¥–µ–∫—Å–∞ 1 –ø–æ 2 (–Ω–µ –≤–∫–ª—é—á–∞—è 3) ‚Üí [2, 3]

// let arr1 = [1, 2];
// let arr2 = [3, 4];
// let combined = arr1.concat(arr2);  // [1, 2, 3, 4]
// concat - –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –º–∞—Å–∏–≤–∏


///////////////////////////////////////////////////////////////////////////////
                                                                             //
 / / / / / //üîÑ –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞ (for, forEach, map, filter, reduce)/ / / / / / 
                                                                            //
//////////////////////////////////////////////////////////////////////////////

// for (let i = 0; i < arr.length; i++) {
//     console.log(arr[i]);
// }

// forEach() ‚Äì –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// arr.forEach(num => console.log(num));

// map() ‚Äì —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
// let doubled = arr.map(num => num * 2);  // –£–º–Ω–æ–∂–∞–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ 2

// filter() ‚Äì —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
// // let evenNumbers = arr.filter(num => num % 2 === 0); –û—Å—Ç–∞–≤–∏—Ç —Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞

// reduce() ‚Äì —Å–ª–æ–∂–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ
// let sum = arr.reduce((acc, num) => acc + num, 0);  // –°—É–º–º–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤


///////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                ///
/ / / / / / / /üìå –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (find, findIndex, includes, indexOf, lastIndexOf) / / / / / / / 
                                                                                                //  
//////////////////////////////////////////////////////////////////////////////////////////////////

// –ù–∞–π—Ç–∏ –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
// let found = arr.find(num => num > 2);  // –ù–∞–π–¥—ë—Ç –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ >2

// –ù–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// let index = arr.findIndex(num => num > 2);  // –ò–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞ >2

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ
// console.log(arr.includes(3));  // true (–µ—Å–ª–∏ 3 –µ—Å—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ)

// –ù–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞
// console.log(arr.indexOf(3));  // –ò–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è 3
// console.log(arr.lastIndexOf(3));  // –ò–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è 3


///////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                ///
/ / / / / / / /üîÄ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (reverse, sort, join, split)/ / / / / / / / / /   //
                                                                                                //  
//////////////////////////////////////////////////////////////////////////////////////////////////

// –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤
// arr.reverse();  // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∑–∞–¥–æ–º –Ω–∞–ø–µ—Ä—ë–¥

// –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤
// arr.sort();  // –°–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏ ["1", "11", "2"]
// arr.sort((a, b) => a - b);  // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —á–∏—Å–µ–ª

// –û–±—ä–µ–¥–∏–Ω–∏—Ç—å –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É
// console.log(arr.join(", "));  // "1, 2, 3, 4, 5"

// –†–∞–∑–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤
// let str = "—è–±–ª–æ–∫–æ, –±–∞–Ω–∞–Ω, –∞–ø–µ–ª—å—Å–∏–Ω";
// let fruits = str.split(", ");  // ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω"]


///////////////////////////////////////////////////////////////////
                                                                ///
 / / / / / / / /üé≠ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π (every, some) / / / / / / / //
                                                               /// 
//////////////////////////////////////////////////////////////////

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤—Å–µ –ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —É—Å–ª–æ–≤–∏—é
// let allPositive = arr.every(num => num > 0);  // true, –µ—Å–ª–∏ –≤—Å–µ > 0

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
// let hasNegative = arr.some(num => num < 0);  // true, –µ—Å–ª–∏ –µ—Å—Ç—å < 0


////////////////////////////////////////////////////////////////////////////////////
                                                                                  //  
  / / / / / / / /üî• –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤ (Array.from, Array.fill) / / / / / / / 
                                                                                  //   
////////////////////////////////////////////////////////////////////////////////////

// –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏–∑ —Å—Ç—Ä–æ–∫–∏
// let letters = Array.from("hello");  // ["h", "e", "l", "l", "o"]

// –ó–∞–ø–æ–ª–Ω–∏—Ç—å –º–∞—Å—Å–∏–≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
// let filledArray = new Array(5).fill(0);  // [0, 0, 0, 0, 0]


////////////////////////////////////////////////////////////
                                                          //
/ / / / / / / /üìå –†–∞–±–æ—Ç–∞ —Å –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–º–∏ –º–∞—Å—Å–∏–≤–∞–º–∏/  / / /  
                                                          //
////////////////////////////////////////////////////////////


// let matrix = [
//     [1, 2, 3],
//     [4, 5, 6],
//     [7, 8, 9]
// ];

// console.log(matrix[1][2]);  // 6 (–≤—Ç–æ—Ä–æ–π –º–∞—Å—Å–∏–≤, —Ç—Ä–µ—Ç–∏–π —ç–ª–µ–º–µ–Ω—Ç)

///////////////////////////////////////////////////////////////






//////////////////////
                    //
// *{               //
                    //
// }                //
// –ö–æ –≤—Å–µ–º—É –ø—Ä–æ–µ–∫—Ç—É //
                    //
//////////////////////

// user.Login = '?'; –Ω–∏–∫
// user.pass = '?'; –ø–∞—Ä–æ–ª—å
//delete. user.? —É–¥–∞–ª—è–µ—Ç

// a.split("") —Ä–∞–∑–¥–µ–ª—è–µ—Ç —Å–ª–æ–≤j yf –Ω–∞ –±—É–∫–≤—ã 

// a.in

// a.reverse() –∑–µ—Ä–∫–∞–ª–æ —Ä–∞–∑–≤–æ. –º–∞—Å–∏–≤

// a.slice() –≤—ã—Ä–µ–∑–∞–µ—Ç 

// a.sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–∞–∫ —Ä—è–¥ 

// console.log(
//math.floor() –∫ –º–µ–Ω. –æ–∫—Ä—É.
// )

// console.log(
  //math.sqrt() –∫–æ—Ä–µ–Ω—å –∫–≤.
// )

// console.log(
  // new Date() - –≤—Ä–µ–º—è
// )

// true && true - –û–±–∞ –¥–æ–ª–∂–Ω—ã –±–∏—Ç—å –ø—Ä–∞–≤—ã

// true || false –∑–∞–¥. –ø—Ä–∞–≤

//.toUpperCase() - –ö–ê–ü–°
//.toLowerCase() - –ê–ù–¢–ò-–ö–ê–ü–°

////////////////
//            //
// != –Ω–µ —Ä–∞–≤–Ω–æ//
//            //
////////////////

